{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,oC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,mB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,+B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,aCWxDC,IAAAA,aAAiBC,IAAI,mBAAmB,YCCzB,WAeX,SAASC,KAELC,EAAAA,EAAAA,QAAOC,IAAAA,UAA8B,aAAa,SAAUC,GAAmC,IAAAC,EAAAC,EAAAC,EAAAC,EACrFC,EAAaC,KAAKC,MAAMF,WAE9B,IAAIV,IAAAA,QAAYa,MAASb,IAAAA,QAAYa,KAAKC,cAAcC,qBAAxD,CAEA,IACIC,EADEC,EAAOP,EAAWO,OAEpBA,IAAQD,EAAMC,EAAKA,EAAKC,OAAS,IAErC,IAAMC,EAA+D,UAAjDnB,IAAAA,MAAUoB,UAAU,yBAAuCV,EAAWW,YAAcX,EAAWY,WAC7GC,EAAgD,iBAAtB,OAAVjB,EAAOU,QAAG,EAAHV,EAAKiB,iBAAkC,OAANhB,EAAGS,QAAG,EAAHT,EAAKgB,gBAAkBvB,IAAAA,MAAUoB,UAAU,2BAM5G,GAJmD,iBAArB,OAAVZ,EAAOQ,QAAG,EAAHR,EAAKgB,gBAAiC,OAANf,EAAGO,IAAAP,EAAKe,eAAiBxB,IAAAA,MAAUoB,UAAU,0BAIlF,IAAlBG,GAEY,MAAXJ,GAAwB,MAAxBA,EAAaM,aAAbN,EAAaM,cAAlB,CAIA,IAGMC,EAwClB,SAAoCC,GAChC,IAAMC,EAAa,0DACbC,EAAaF,EAAWG,MAAMF,GAChCG,EAAW,GAEXC,EAAU,GAEd,GAAIH,EAAY,CACZE,EAAWF,EAAW,GAItB,IAAAI,GAHAD,EAAUH,EAAW,IAGWK,MAAM,KAAKC,IAAIC,QAAxCC,EAAKJ,EAAA,GAAEK,EAAML,EAAA,GAcpB,MALuB,iCAFTK,EAASD,EAAQ,6DAA4DN,EAAQ,+CAAgD,IAE5H,UARNO,EAASD,EAAQ,2CAAH,0CAEA,SAASN,EAAQ,UAAUC,EAMnC,0CAEHL,EAAWY,QAAQX,EAAY,IACmB,QAG1E,CACI,OAAOD,CAEf,CAtEiCa,CAHOrB,EAAYM,cAAcc,QAAQ,iCAAkC,WAM1FE,EAAUC,EAAEC,OAAMC,EAAAA,EAAAA,UAASlB,EAAcH,IAG/C,GAAIJ,EAAa,CAKb,GAJeuB,EAAA,OAAKG,UAAU,eACZ,cAAcC,KAAK3B,EAAYM,eAGjC,CACZ,IAAMsB,EAASL,EAAA,OAAKG,UAAU,oBAC9BxC,EAAMJ,IAAI,WAAY8C,EAAQ,IAClC,CAEA,IAAMC,EAAUN,EAAA,OAAKG,UAAU,kBAAkBJ,GACjDpC,EAAMJ,IAAe,WAAwB+C,EAAS,KAElD3C,EAAM4C,IAAI,SACV5C,EAAM6C,YAAY,OAAQ,IAG9B,IAAMC,EAAWT,EAAA,OAAKG,UAAU,oBAChCxC,EAAMJ,IAAI,YAAakD,EAAU,IAC7B9C,EAAM4C,IAAI,iBACV5C,EAAM6C,YAAY,eAAgB,IAElC7C,EAAM4C,IAAI,qBACV5C,EAAM6C,YAAY,mBAAoB,EAE9C,CAtCyC,CAf+C,CAsD5F,GACJ,MAxE0B,IAAfE,MACPjD,EAAAA,EAAAA,QAAOiD,IAAAA,UAAsB,aAAa,SAAU/C,GAChDH,GACJ,IAIAF,IAAAA,aAAiBiD,IAAI,iBACrBI,IAAAA,UAAc7B,aAAe8B,IAAAA,UAAgB,gBAC7CD,IAAAA,UAAc9B,cAAgB+B,IAAAA,UAAgB,kBAkElDpD,GACJ,ED9EEqD,IEHApD,EAAAA,EAAAA,QAAOqD,IAAAA,UAAwB,UAAU,WACvC7C,KAAKI,qBAAuB0C,IAAO9C,KAAKE,KAAKC,cAAcC,sBAC3DJ,KAAK+C,6BAA+BD,IAAO9C,KAAKE,KAAKC,cAAc4C,6BACrE,KFKAvD,EAAAA,EAAAA,QAAOwD,IAAAA,UAAgB,YAAY,WAEjC,GAAI3D,IAAAA,SAAgD,eAAjCA,IAAAA,QAAYT,IAAI,aAA+B,CAChE,IAAMqE,EAAWjD,KAAKC,MAAMiD,KAAKC,KAAKC,WAChCC,EAAQJ,EAASK,OACjBC,EAAQN,EAASO,OAGvB,GAAIH,GAASE,EAAO,CAElB,IAAME,EAAiBzD,KAAK0D,QAAQC,cAAc,cAGlD,GAAIF,EAAgB,CAElB,IAAMG,EAAa,IAAIC,OAAON,EAAO,KACrCE,EAAeK,UAAYL,EAAeK,UAAUlC,QAAQgC,EAAYP,EAG1E,CACF,CACF,CACF,KAGA7D,EAAAA,EAAAA,QAAOuE,IAAAA,UAA+B,WAAW,SAAUvC,GAGzD/C,OAAOuF,KAAKxC,GAAKyC,SAAQ,SAAA1F,GACZ,UAAPA,UACKiD,EAAIjD,GAGF,OAAPA,UACKiD,EAAIjD,EAEf,IAEAiD,EAAY,OAAI,gBAChBA,EAAS,IAAI,eACf,GAEF,G","sources":["webpack://@prippp/synopsis/webpack/bootstrap","webpack://@prippp/synopsis/webpack/runtime/compat get default export","webpack://@prippp/synopsis/webpack/runtime/define property getters","webpack://@prippp/synopsis/webpack/runtime/hasOwnProperty shorthand","webpack://@prippp/synopsis/external root \"flarum.core.compat['forum/app']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['forum/components/Post']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['common/extend']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['common/utils/string']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['tags/models/Tag']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['common/Model']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['forum/components/SearchPage']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@prippp/synopsis/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@prippp/synopsis/./src/forum/index.ts","webpack://@prippp/synopsis/./src/forum/addSummaryExcerpt.tsx","webpack://@prippp/synopsis/./src/forum/addUserPreference.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/models/Tag'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SearchPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Post from 'flarum/forum/components/Post';\nimport { extend } from \"flarum/common/extend\";\n\nimport DiscussionListState from \"flarum/forum/states/DiscussionListState\";\n\n\n\nimport addSummaryExcerpt from './addSummaryExcerpt';\nimport addUserPreference from './addUserPreference';\n\napp.initializers.add('prippp-synopsis', () => {\n\n  addSummaryExcerpt();\n  addUserPreference();\n  \n  // 扩展 DiscussionList 组件\n  // 扩展帖子渲染逻辑\n  extend(Post.prototype, 'oncreate', function () {\n    // 仅在帖子详情页面时执行替换逻辑\n    if (app.current && app.current.get('routeName') === 'discussion') {\n      const postData = this.attrs.post.data.attributes;\n      const slink = postData.cslink;  // 从帖子数据中获取自定义字段 slink\n      const olink = postData.colink;  // 从帖子数据中获取自定义字段 olink\n\n      // 当 slink 和 olink 都存在时执行替换\n      if (slink && olink) {\n        // console.log(\"扩展帖子渲染逻辑, slink:\", slink, \"olink:\", olink);\n        const contentElement = this.element.querySelector('.Post-body');  // 获取帖子正文元素\n        // console.log(\"contentElement:\", contentElement);\n\n        if (contentElement) {\n          // 将 olink 的所有出现替换为 slink\n          const olinkRegex = new RegExp(olink, 'g');  // 创建一个正则表达式，匹配所有 olink 的出现\n          contentElement.innerHTML = contentElement.innerHTML.replace(olinkRegex, slink);\n\n          // console.log(`已将 ${olink} 替换为 ${slink}`);\n        }\n      }\n    }\n  });\n\n  // 移除默认排序选项\n  extend(DiscussionListState.prototype, \"sortMap\", function (map) {\n    // 移除所有默认排序选项\n    // Object.keys(map).forEach(key => delete map[key]);\n    Object.keys(map).forEach(key => {\n      if (key == 'latest') {\n        delete map[key]; // 只删除不是 'latest' 的选项\n      }\n\n      if (key == 'top') {\n        delete map[key]; // 只删除不是 'latest' 的选项\n      }\n    });\n\n    map[\"latest\"] = \"-lastPostedAt\";\n    map[\"top\"] = \"-commentCount\";\n  });\n\n});\n\n\n\n// app.initializers.add(\"my-default-sort\", function () {\n\n// });\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport { truncate } from 'flarum/common/utils/string';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Tag from 'flarum/tags/models/Tag';\nimport Model from 'flarum/common/Model';\nimport type Mithril from 'mithril';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport SearchPage from 'flarum/forum/components/SearchPage'; // 引入 SearchPage 组件\n\n\nexport default function addSummaryExcerpt() {\n\n    /// 设置搜索页面\n    if (typeof SearchPage !== 'undefined') {\n        extend(SearchPage.prototype, 'viewItems', function (items: ItemList<Mithril.Children>) {\n            extendDiscussionListItem();\n        });\n    }\n\n    // 继续你的代码...\n    if (app.initializers.has('flarum-tags')) {\n        Tag.prototype.richExcerpts = Model.attribute('richExcerpts');\n        Tag.prototype.excerptLength = Model.attribute('excerptLength');\n    }\n\n    function extendDiscussionListItem() {\n\n        extend(DiscussionListItem.prototype, 'infoItems', function (items: ItemList<Mithril.Children>) {\n            const discussion = this.attrs.discussion;\n\n            if (app.session.user && !app.session.user.preferences().showSynopsisExcerpts) { return; }\n\n            const tags = discussion.tags();\n            let tag;\n            if (tags) { tag = tags[tags.length - 1]; }\n\n            const excerptPost = app.forum.attribute('synopsis.excerpt_type') === 'first' ? discussion.firstPost() : discussion.lastPost();\n            const excerptLength = typeof tag?.excerptLength() === 'number' ? tag?.excerptLength() : app.forum.attribute('synopsis.excerpt_length');\n            // 这里是富文本判断  下面直接使用了\n            const richExcerpt = typeof tag?.richExcerpts() === 'number' ? tag?.richExcerpts() : app.forum.attribute('synopsis.rich_excerpts');\n\n            const onMobile = true;\n\n            if (excerptLength === 0) { return; }\n\n            if (!excerptPost?.contentHtml?.()) return;\n            // console.log(\"源文件1：\",excerptPost)\n            // console.log(\"源文件2：\",excerptPost.contentHtml())\n\n            const contentWithoutLinks = excerptPost.contentHtml().replace(/https:\\/\\/(pan|baidu)\\.[^\\s]+/g, '进入详情查看');\n\n            // 调用字符串解析方法，将图片和文本分开处理\n            const modifiedHtml = restructureHtmlWithStrings(contentWithoutLinks);\n\n            \n            const content = m.trust(truncate(modifiedHtml, excerptLength));\n\n            // console.log(\"源文件content：\",content)\n            if (excerptPost) {\n                const noImgs = <div className=\"custom-i1\"></div>;\n                const hasImages = /<img[^>]*>/i.test(excerptPost.contentHtml());\n                // console.log(excerptPost)\n                // 如果没有图片，添加一个自定义的 noImgs 元素\n                if (!hasImages) {\n                    const noImgs = <div className=\"custom-excerptI\"></div>; // 您可以自定义内容\n                    items.add('excerptI', noImgs, 600); // 设置优先级为 400，确保在摘要之后\n                }\n\n                const excerpt = <div className=\"custom-excerpt\">{content}</div>;\n                items.add(onMobile ? 'excerptM' : 'excerpt', excerpt, 500);\n\n                if (items.has('tags')) {\n                    items.setPriority('tags', 70);\n                }\n\n                const excerpt2 = <div className=\"custom-excerpt2\"></div>;\n                items.add('excerptMC', excerpt2, 60);\n                if (items.has('terminalPost')) {\n                    items.setPriority('terminalPost', 50);\n                }\n                if (items.has('discussion-views')) {\n                    items.setPriority('discussion-views', 0);\n                }\n            }\n        });\n    }\n\n    // 初始扩展调用\n    extendDiscussionListItem();\n}\n\n\nfunction restructureHtmlWithStrings(htmlString) {\n    const imgPattern = /<p><img[^>]*src=\"([^\"]*)\"[^>]*alt=\"([^\"]*)\"[^>]*><\\/p>/i;\n    const imageMatch = htmlString.match(imgPattern);\n    let imageUrl = '';\n    let imageContent = '';\n    let altText = '';\n\n    if (imageMatch) {\n        imageUrl = imageMatch[1];\n        altText = imageMatch[2];\n\n        // 提取宽度和长度\n        const [width, height] = altText.split('x').map(Number);\n        const imgStyle = height > width ? `style=\" object-fit: contain !important;\"` : `style=\" object-fit: cover !important;\"` ;\n\n        imageContent = `<img ${imgStyle} src=\"${imageUrl}\" alt=\"${altText}\">`;\n\n        \n        // 判断长度是否大于宽度并设置样式\n        const style = height > width ? `style=\"background-size:100% 100%; background-image: url('${imageUrl}?x-oss-process=image/resize,h_10,m_lfit');\"` : '';\n\n        const imageWithClass = `<div class=\"image-container\" ${style}>${imageContent}</div>`;\n        \n        const restContent = htmlString.replace(imgPattern, '');\n        const contentWithClass = `<div class=\"content-container\">${restContent}</div>`;\n\n        return imageWithClass + contentWithClass;\n    } else {\n        return htmlString;\n    }\n}\n\n\n\n\n// 解析和处理 HTML 的函数，结合上面的字符串解析方法\nfunction restructureHtmlWithStrings2(htmlString) {\n    // 提取第一个 <p> 标签中的图片内容\n    const imgPattern = /<p>(<img[^>]*>.*?<\\/p>)/i;\n    const imageContent = htmlString.match(imgPattern) ? htmlString.match(imgPattern)[1] : ''; // 提取出包含图片的部分\n\n    // 提取图片之后的所有内容\n    const restContent = htmlString.replace(imgPattern, ''); // 删除图片部分，保留剩下的内容\n\n    // 为图片部分添加 class\n    const imageWithClass = imageContent ? `<div class=\"image-container\">${imageContent}</div>` : '';\n\n    // 为其余内容添加 class\n    const contentWithClass = `<div class=\"content-container\">${restContent}</div>`;\n\n    // 合并并返回新的结构\n    return imageWithClass + contentWithClass;\n}\n\n// function restructureHtmlWithStrings(htmlString) {\n//     // 提取第一个 <p> 标签中的图片内容\n//     const imgPattern = /<p>(<img[^>]*>.*?<\\/p>)/i;\n//     let imageContent = htmlString.match(imgPattern) ? htmlString.match(imgPattern)[1] : ''; // 提取出包含图片的部分\n\n//     // 给第一个 img 标签添加 class\n//     if (imageContent) {\n//         imageContent = imageContent.replace('<img', '<img class=\"first-image-class\"'); // 给第一个 <img> 标签添加 class\n//     }\n\n//     // 提取图片之后的所有内容\n//     const restContent = htmlString.replace(imgPattern, ''); // 删除图片部分，保留剩下的内容\n\n//     // 为图片部分添加 class\n//     const imageWithClass = imageContent ? `<div class=\"image-container\">${imageContent}</div>` : '';\n\n//     // 为其余内容添加 class\n//     const contentWithClass = `<div class=\"content-container\">${restContent}</div>`;\n\n//     // 合并并返回新的结构\n//     return imageWithClass + contentWithClass;\n// }","import type Mithril from 'mithril';\nimport app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Switch from 'flarum/common/components/Switch';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default function () {\n  extend(SettingsPage.prototype, 'oninit', function () {\n    this.showSynopsisExcerpts = Stream(this.user.preferences().showSynopsisExcerpts);\n    this.showSynopsisExcerptsOnMobile = Stream(this.user.preferences().showSynopsisExcerptsOnMobile);\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","extendDiscussionListItem","extend","DiscussionListItem","items","_tag","_tag2","_tag3","_tag4","discussion","this","attrs","user","preferences","showSynopsisExcerpts","tag","tags","length","excerptPost","attribute","firstPost","lastPost","excerptLength","richExcerpts","contentHtml","modifiedHtml","htmlString","imgPattern","imageMatch","match","imageUrl","altText","_altText$split$map","split","map","Number","width","height","replace","restructureHtmlWithStrings","content","m","trust","truncate","className","test","noImgs","excerpt","has","setPriority","excerpt2","SearchPage","Tag","Model","addSummaryExcerpt","SettingsPage","Stream","showSynopsisExcerptsOnMobile","Post","postData","post","data","attributes","slink","cslink","olink","colink","contentElement","element","querySelector","olinkRegex","RegExp","innerHTML","DiscussionListState","keys","forEach"],"sourceRoot":""}